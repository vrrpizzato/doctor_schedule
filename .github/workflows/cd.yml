name: Gigalixir Continuous Deployment

on:
  push:
    branches:
      - main
jobs:
  test:
    name: build and test
    runs-on: ubuntu-latest
    services:
      db:
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        image: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.10.3' # Define the elixir version [required]
        otp-version: '22.3' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test
    - name: Check Formatting
      run: mix format

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1
      - uses: mhanberg/gigalixir-action@v0.4.3
        with:
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME}}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD}}
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP}}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          MIGRATIONS: false